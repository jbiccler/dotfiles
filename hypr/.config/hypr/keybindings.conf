## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


#*  Variables 
# Default if commented out
# $mainMod = Super # super / meta / windows key
# Assign apps
# $TERMINAL = kitty
# $EDITOR = code
# $EXPLORER = dolphin
# $BROWSER = firefox

$wm=Window Management
$d=[$wm]
bindd = $mainMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, X, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = Alt, F4, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod, W, $d Toggle floating,  exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 95% 95%; dispatch centerwindow"
bindd = $mainMod, G, $d toggle group, togglegroup
# bindd = Shift, F11, $d toggle fullscreen, fullscreen
bindd = $mainMod, F, $d toggle fullscreen, fullscreen, 1
bindd = $mainMod Shift, F, $d toggle fullscreen, fullscreen, 0
# bindd = $mainMod, L, $d lock screen, exec, lockscreen.sh
# bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh
bindd = Control Alt, Delete, $d logout menu, exec, $scrPath/logoutlaunch.sh
bindd = Alt_R, Control_R, $d toggle waybar and reload config, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
# bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster


bind = $mainMod Shift, D, exec, hyprctl keyword general:layout "dwindle"
bind = $mainMod Control,  D, exec, hyprctl keyword general:layout "master"
bind = $mainMod, M, layoutmsg, focusmaster master
bind = $mainMod Shift, M, layoutmsg, swapwithmaster

# $d=[$wm|Group Navigation]
bindd = $mainMod Control, H, $d change active group backwards   , changegroupactive, b
bindd = $mainMod Control, L, $d change active group forwards  , changegroupactive, f

$d=[$wm|Change focus]
bindd = $mainMod, Left, $d focus left, movefocus, l
bindd = $mainMod, Right, $d focus right , movefocus, r
bindd = $mainMod, Up, $d focus up , movefocus, u
bindd = $mainMod, Down , $d focus down, movefocus, d

bindd = $mainMod, H, $d focus left, movefocus, l
bindd = $mainMod, L, $d focus right , movefocus, r
bindd = $mainMod, K, $d focus up , movefocus, u
bindd = $mainMod, J , $d focus down, movefocus, d
bindd = ALT, Tab,$d Cycle focus, cyclenext

$d=[$wm|Resize Active Window]
# Resize windows
bindde = $mainMod ALT, Right, $d resize window right , resizeactive, 30 0
bindde = $mainMod ALT, Left, $d resize window left, resizeactive, -30 0
bindde = $mainMod ALT, Up, $d resize window up, resizeactive, 0 -30
bindde = $mainMod ALT, Down, $d resize  window down, resizeactive, 0 30

bindde = $mainMod ALT, L, $d resize window right , resizeactive, 30 0
bindde = $mainMod ALT, H, $d resize window left, resizeactive, -30 0
bindde = $mainMod ALT, K, $d resize window up, resizeactive, 0 -30
bindde = $mainMod ALT, J, $d resize  window down, resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift, left, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift, right, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift, up, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift, down, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

bindde = $mainMod Shift, H, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift, L, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift, K, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift, J, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$wm|Move & Resize with mouse]
binddm = $mainMod, mouse:272, $d hold to move window, movewindow
binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow
# binddm = $mainMod, Z, $d hold to move window , movewindow
# binddm = $mainMod, X, $d hold to resize window, resizewindow

# Toggle focused window split
$d=[$wm]
bindd = $mainMod, T, $d toggle split, togglesplit

$l=Launcher
$d=[$l|Apps]
bindd = $mainMod, RETURN, $d terminal emulator , exec, $TERMINAL
bindd = $mainMod, E, $d file explorer , exec, $EXPLORER
bindd = $mainMod, C, $d text editor , exec, $EDITOR
bindd = $mainMod, B, $d web browser , exec, $BROWSER
bindd = Control Shift, Escape, $d system monitor , exec, $scrPath/sysmonlaunch.sh

$d=[$l|Rofi menus]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, SPACE, $d application finder , exec, pkill -x rofi || $rofi-launch d
bindd = $mainMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w
bindd = $mainMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f
bindd = $mainMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
bindd = $mainMod, comma, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
bindd = $mainMod, period, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
bindd = $mainMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu


$hc=Hardware Controls
$d=[$hc|Audio]
binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$hc|Media]
binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scrPath/brightnesscontrol.sh i # increase brightness
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scrPath/brightnesscontrol.sh d # decrease brightness


$ut=Utilities
$d=[$ut]
# binddl = $mainMod, K, $d toggle keyboard layout , exec, $scrPath/keyboardswitch.sh # switch keyboard layout
bindd = $mainMod Alt, G, $d game mode , exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bindd = $mainMod Shift, G, $d open game launcher , exec, $scrPath/gamelauncher.sh # run game launcher for steam and lutris

$d=[$ut|Screen Capture]
bindd = $mainMod Shift, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
# bindd = $mainMod, P, $d snip screen , exec, $scrPath/screenshot.sh s # partial screenshot capture
bindd = $mainMod Shift, S, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
binddl = $mainMod Alt, S, $d print monitor , exec, $scrPath/screenshot.sh m # monitor screenshot capture
binddl = , Print, $d print all monitors , exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# TODO Make a main rofi menu for these selectors
$rice=Theming and Wallpaper
$d=[$rice]
bindd = $mainMod Alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
bindd = $mainMod Alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
bindd = $mainMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
bindd = $mainMod Alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
bindd = $mainMod Alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bindd = $mainMod Shift, R, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bindd = $mainMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu



$ws=Workspaces
$d=[$ws|Navigation]
bindd = $mainMod, 1, $d navigate to first workspace off monitor, workspace, r~1
bindd = $mainMod, 2, $d navigate to second workspace off monitor, workspace, r~2
bindd = $mainMod, 3, $d navigate to third workspace off monitor , workspace, r~3

bindd = $mainMod, KP_END, $d navigate to first workspace off monitor, workspace, r~1
bindd = $mainMod, KP_DOWN, $d navigate to second workspace off monitor, workspace, r~2
bindd = $mainMod, KP_NEXT, $d navigate to third workspace off monitor , workspace, r~3

bindd = $mainMod Control, 1, $d navigate to workspace 1 , workspace, 1
bindd = $mainMod Control, 2, $d navigate to workspace 2 , workspace, 2
bindd = $mainMod Control, 3, $d navigate to workspace 3 , workspace, 3
bindd = $mainMod Control, 4, $d navigate to workspace 4 , workspace, 4
bindd = $mainMod Control, 5, $d navigate to workspace 5 , workspace, 5
bindd = $mainMod Control, 6, $d navigate to workspace 6 , workspace, 6
bindd = $mainMod Control, 7, $d navigate to workspace 7 , workspace, 7
bindd = $mainMod Control, 8, $d navigate to workspace 8 , workspace, 8
bindd = $mainMod Control, 9, $d navigate to workspace 9 , workspace, 9
bindd = $mainMod Control, 0, $d navigate to workspace 10 , workspace, 10

bindd = $mainMod Control, KP_END, $d navigate to workspace 1 , workspace, 1
bindd = $mainMod Control, KP_DOWN, $d navigate to workspace 2 , workspace, 2
bindd = $mainMod Control, KP_Next, $d navigate to workspace 3 , workspace, 3
bindd = $mainMod Control, KP_Left, $d navigate to workspace 4 , workspace, 4
bindd = $mainMod Control, KP_Begin, $d navigate to workspace 5 , workspace, 5
bindd = $mainMod Control, KP_Right, $d navigate to workspace 6 , workspace, 6
bindd = $mainMod Control, KP_Home, $d navigate to workspace 7 , workspace, 7
bindd = $mainMod Control, KP_UP, $d navigate to workspace 8 , workspace, 8
bindd = $mainMod Control, KP_Prior, $d navigate to workspace 9 , workspace, 9
bindd = $mainMod Control, KP_Insert, $d navigate to workspace 10 , workspace, 10

$d=[$ws|Navigation|Relative workspace]
bindd = $mainMod Control, Right, $d change active workspace forwards  , workspace, r+1
bindd = $mainMod Control, Left, $d change active workspace backwards , workspace, r-1

$d=[$ws|Navigation]
bindd = $mainMod Control, Down, $d navigate to the nearest empty workspace , workspace, empty

# Move focused window to a workspace
$d=[$ws|Move window to workspace]
bindd = $mainMod Shift, 1, $d move to first workspace off monitor, movetoworkspace, r~1
bindd = $mainMod Shift, 2, $d move to second workspace off monitor, movetoworkspace, r~2
bindd = $mainMod Shift, 3, $d move to third workspace off monitor , movetoworkspace, r~3

bindd = $mainMod Control+Shift, 1, $d move to workspace 1 , movetoworkspace, 1
bindd = $mainMod Control+Shift, 2, $d move to workspace 2 , movetoworkspace, 2
bindd = $mainMod Control+Shift, 3, $d move to workspace 3 , movetoworkspace, 3
bindd = $mainMod Control+Shift, 4, $d move to workspace 4 , movetoworkspace, 4
bindd = $mainMod Control+Shift, 5, $d move to workspace 5 , movetoworkspace, 5
bindd = $mainMod Control+Shift, 6, $d move to workspace 6 , movetoworkspace, 6
bindd = $mainMod Control+Shift, 7, $d move to workspace 7 , movetoworkspace, 7
bindd = $mainMod Control+Shift, 8, $d move to workspace 8 , movetoworkspace, 8
bindd = $mainMod Control+Shift, 9, $d move to workspace 9 , movetoworkspace, 9
bindd = $mainMod Control+Shift, 0, $d move to workspace 10 , movetoworkspace, 10

bindd = $mainMod Control+Shift, KP_END, $d move to workspace 1 , movetoworkspace, 1
bindd = $mainMod Control+Shift, KP_DOWN, $d move to workspace 2 , movetoworkspace, 2
bindd = $mainMod Control+Shift, KP_Next, $d move to workspace 3 , movetoworkspace, 3
bindd = $mainMod Control+Shift, KP_Left, $d move to workspace 4 , movetoworkspace, 4
bindd = $mainMod Control+Shift, KP_Begin, $d move to workspace 5 , movetoworkspace, 5
bindd = $mainMod Control+Shift, KP_Right, $d move to workspace 6 , movetoworkspace, 6
bindd = $mainMod Control+Shift, KP_Home, $d move to workspace 7 , movetoworkspace, 7
bindd = $mainMod Control+Shift, KP_UP, $d move to workspace 8 , movetoworkspace, 8
bindd = $mainMod Control+Shift, KP_Prior, $d move to workspace 9 , movetoworkspace, 9
bindd = $mainMod Control+Shift, KP_Insert, $d move to workspace 10 , movetoworkspace, 10

# Move focused window to a relative workspace
$d=[$ws]
bindd = $mainMod Control+Shift, Right, $d move window to next relative workspace , movetoworkspace, r+1
bindd = $mainMod Control+Shift, Left, $d move window to previous relative workspace , movetoworkspace, r-1


# Scroll through existing workspaces
$d=[$ws|Navigation]
bindd = $mainMod, mouse_down, $d next workspace, workspace, e+1
bindd = $mainMod, mouse_up, $d previous workspace, workspace, e-1


# Move/Switch to special workspace (scratchpad)
$d=[$ws|Navigation|Special workspace]
bindd = $mainMod Shift, Z, $d move to scratchpad  , movetoworkspace, special
bindd = $mainMod Shift+Alt, Z, $d move to scratchpad (silent) , movetoworkspacesilent, special
bindd = $mainMod, Z, $d toggle scratchpad ,  togglespecialworkspace

# Move focused window to a workspace silently
$d=[$ws|Navigation|Move window silently]
bindd = $mainMod Shift+Alt, 1, $d first move to workspace off monitor  (silent), movetoworkspacesilent, r~1
bindd = $mainMod Shift+Alt, 2, $d second move to workspace off monitor  (silent), movetoworkspacesilent, r~2 
bindd = $mainMod Shift+Alt, 3, $d third move to workspace off monitor  (silent), movetoworkspacesilent, r~3

bindd = $mainMod Shift+Alt, KP_END, $d first move to workspace off monitor  (silent), movetoworkspacesilent, r~1
bindd = $mainMod Shift+Alt, KP_DOWN, $d second move to workspace off monitor  (silent), movetoworkspacesilent, r~2 
bindd = $mainMod Shift+Alt, KP_NEXT, $d third move to workspace off monitor  (silent), movetoworkspacesilent, r~3
# bindd = $mainMod Shift+Alt, 4, $d move to workspace 4  (silent), movetoworkspacesilent, 4
# bindd = $mainMod Shift+Alt, 5, $d move to workspace 5  (silent), movetoworkspacesilent, 5
# bindd = $mainMod Shift+Alt, 6, $d move to workspace 6  (silent), movetoworkspacesilent, 6
# bindd = $mainMod Shift+Alt, 7, $d move to workspace 7  (silent), movetoworkspacesilent, 7
# bindd = $mainMod Shift+Alt, 8, $d move to workspace 8  (silent), movetoworkspacesilent, 8
# bindd = $mainMod Shift+Alt, 9, $d move to workspace 9  (silent), movetoworkspacesilent, 9



$d=#! unset the group name
